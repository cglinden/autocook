.\"
.\"     cook - file construction tool
.\"     Copyright (C) 1995, 1997, 1998, 2007 Peter Miller;
.\"     All rights reserved.
.\"
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under the terms of the GNU General Public License as published by
.\"     the Free Software Foundation; either version 2 of the License, or
.\"     (at your option) any later version.
.\"
.\"     This program is distributed in the hope that it will be useful,
.\"     but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License for more details.
.\"
.\"     You should have received a copy of the GNU General Public License
.\"     along with this program; if not, write to the Free Software
.\"     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
.\"
.\" MANIFEST: input for archive/cook-N.N.lsm
.\"
.\" LSM = Linux Software Module, an archive description file
.\"
.\" Descriptions of the LSM file format can be found in the
.\" /pub/Linux/docs directories of sunsite.unc.edu and tsx-11.mit.edu.
.\"
.if n .ftr CB B
.if n .ftr CI I
.if n .ftr CW R
.if n .ftr C  R
.ad l
.hy 0
.de SH
.in 0
.br
\\$1
'in 8n
..
.so ../etc/version.so
.SH Begin3
.SH Title:
Cook
.SH Version:
\*(v)
.SH Entered-date:
.ds MO1 JAN
.ds MO2 FEB
.ds MO3 MAR
.ds MO4 APR
.ds MO5 MAY
.ds MO6 JUN
.ds MO7 JUL
.ds MO8 AUG
.ds MO9 SEP
.ds MO10 OCT
.ds MO11 NOV
.ds MO12 DEC
.nr y4 \n[yr]+1900
\n[dy]\*[MO\n[mo]]\n[y4]
.SH Description:
Cook is a tool for constructing files. It is given a set of files to
create, and recipes of how to create them. In any non-trivial program
there will be prerequisites to performing the actions necessary to
creating any file, such as include files.  The cook program provides a
mechanism to define these.
.sp
When a program is being developed or maintained, the programmer will
typically change one file of several which comprise the program.  Cook
examines the last-modified times of the files to see when the
prerequisites of a file have changed, implying that the file needs to be
recreated as it is logically out of date.
.sp
Cook also provides a facility for implicit recipes, allowing users to
specify how to form a file with a given suffix from a file with a
different suffix.  For example, to create filename.o from filename.c
.sp
*
'in +2n
Cook has a simple but powerful string-based description language with
many built-in functions.  This allows sophisticated filename
specification and manipulation without loss of readability or
performance.
.in -2n
.sp
*
'in +2n
Cook is able to use fingerprints to supplement file modification
times.  This allows build optimization without contorted rules.
.in -2n
.sp
*
'in +2n
Cook is able to build your project with multiple parallel threads, with
support for rules which must be single threaded.  It is possible to
distribute parallel builds over your LAN, allowing you to turn your
network into a virtual parallel build engine.
.in -2n
.sp
*
'in +2n
Cook can be configured with an explicit list of primary source files.
This allow the dependency graph to be constructed faster by not going
down dead ends, and also allows better error messages when the graph
can't be constructed.  This requires an accurate source file manifest.
.in -2n
.sp
Cook runs on almost any flavor of UNIX.
Self configuring using a GNU Autoconf generated configure script.
There are no modifications required to compile it for Linux.
.SH Keywords:
build,
dependency maintenance,
derivation,
make,
referential integrity
.SH Author:
millerp@canb.auug.org.au (Peter Miller)
.SH Primary-site:
http://www.canb.auug.org.au/~millerp/cook/
.br
cook-\*(v).README
.br
cook-\*(v).lsm
.br
cook-\*(v).spec
.br
cook-\*(v).tar.gz
.br
cook-\*(v).ug.ps.gz
.br
cook-\*(v).rm.ps.gz
.SH Secondary-site:
sunsite.unc.edu /pub/Linux/devel/make
.br
cook-\*(v).README
.br
cook-\*(v).lsm
.br
cook-\*(v).spec
.br
cook-\*(v).tar.gz
.br
cook-\*(v).ug.ps.gz
.br
cook-\*(v).rm.ps.gz
.SH Copying-policy:
GPL 2.0
.SH End
