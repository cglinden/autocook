.\"
.\"     cook - file construction tool
.\"     Copyright (C) 1997, 2001, 2004, 2007 Peter Miller;
.\"     All rights reserved.
.\"
.\"     This program is free software; you can redistribute it and/or modify
.\"     it under the terms of the GNU General Public License as published by
.\"     the Free Software Foundation; either version 2 of the License, or
.\"     (at your option) any later version.
.\"
.\"     This program is distributed in the hope that it will be useful,
.\"     but WITHOUT ANY WARRANTY; without even the implied warranty of
.\"     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\"     GNU General Public License for more details.
.\"
.\"     You should have received a copy of the GNU General Public License
.\"     along with this program; if not, write to the Free Software
.\"     Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111, USA.
.\"
.\" MANIFEST: document describing new 1.11 features
.\"
.PP
Development of this release was generously supported by
Endocardial Solutions, Inc.
.PP
.if n *
.if t \(bu
Parallel execution is now supported.  If you have a multi-processor
machine, you can specify the number of parallel processing threads with
the -PARallel command line option, or via the \fI[parallel_jobs]\fP
variable.  By using the \fI[os node]\fP function, the
\fI[parallel_jobs]\fP variable can be set appropriately for the host
machine automatically by the cookbook.
There is a new \f(CWsingle-thread\fP keyword to support single threading
recipes which cannot be paralleized.
.PP
.if n *
.if t \(bu
The dependency graph is now constructed differently.  This gives exactly
the same results, but the order of evaluation of recipes is a little
more random.  This different graph construction is able to give better
error messages, better -Reason information, and allows the introduction
of parallel recipe evaluation if you have a multi-processor computer.
.PP
.if n *
.if t \(bu
Recipes which use \fIc_incl\fP(1) to calculate their dependencies in the
ingredients section will need a small modification \- they will need to
use the \f(CW--Absent-Program-Ignore\fP option.  See the User Guide for
more information.
.PP
.if n *
.if t \(bu
You can now print pair-wise file dependencies by using the -PAirs option.
.PP
.if n *
.if t \(bu
You can now print a shell script which approximates the actions cook
would take when building the targets by using the -SCript option.
.PP
.if n *
.if t \(bu
There is a new ``shallow'' recipe flag, allowing you to specify that the
targets of a recipe are required to be in the top-level directory, not
further down the \f(CWsearch_list\fP path.
.PP
.if n *
.if t \(bu
You may now define user-written functions in the cookbook to supplement
the built-in functions.  Your functions will be called in the same
manner as built-in functions.  There are new \f(CWfunction\fP and
\f(CWreturn\fP keywords to support definition of functions.
.PP
.if n *
.if t \(bu
The progress indicators produced by the -STar option now have more detail:
\fB+\fP means that the cook book is being read,
\fB*\fP means that the graph is being constructed, and
\fB#\fP means that the graph is being walked.
.\" ---------------------- Add New Notes Above This Line ----------------------
.\" The 1.11 release was not made public.
.SS "Release 1.11 (1997-Jun-14)"
.PP
.if n *
.if t \(bu
Fixed a bug in the pattern matching which caused %0
(when not at the start of the pattern)
to fail to match the empty string.
.PP
.if n *
.if t \(bu
The install locations have been changed slightly to conform better to
the GNU filesystem standards, and to take advantage of the additional
install location options of the configure scripts generated by GNU
Autoconf.
