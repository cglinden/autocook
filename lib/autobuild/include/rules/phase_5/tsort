/*  cook files look like -*- C++ -*-
 *
 *  Autodiscovering Build System
 *  Copyright (C) 1997 - 2002 CG Software Design LLC
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *  Please send bug reports to bugs@cg-soft.com
 */

/*==============================================================*
 *								*
 *	Sort library dependencies to create link line		*
 *								*
 *==============================================================*/

%0[do]/[unix]/%9/%[tsort_suffix]: %0[do]/[unix]/%9/%[bindep_suffix]:
    [build]/helper/depend/tsort
    [build]/helper/depend/tsort_filter
    /* Uncomment next line if a change here should trigger rebuilds */
    [build]/include/rules/phase_5/tsort
    [build]/include/functions/get-local-value
    [build]/include/functions/combine
    [cookbook]
  set /* time-adjust-back */ silent unlink
{
#include [build]/include/rules/store-prerequisites
  [echo] "'    Tsort:      '" %0[do]/[unix]/%9/%[bindep_suffix]"' -> ("[thread-id]")'";

  [perl] [build]/helper/depend/tsort
         -prefix "''"
         -suffix "''"
         -tsort [tsort]
         -libdep_suffix [libdep_suffix]
         -o [target].tmp
         [addprefix '-linkto ' [linkto_targets_%9]]
         %0[do]/[unix]/%9/%[bindep_suffix];
  /* s_xxx = string value; q_xxx = quoted string value */
  s_linkto_[thread-id] = [collect [cat] [target].tmp];
  q_[thread-id] = "linkto_"%0%/%9" = [tail\n"[unsplit "\n" [s_linkto_[thread-id]]]"\n];\n";
  s_linkto_dirs_[thread-id] = [dir [dir [dir [dir [dir [tail [s_linkto_[thread-id]]]]]]]];
  if [count [s_linkto_dirs_[thread-id]]] then {
    q_[thread-id] += "linkto_dir_"%0%/%9" =\n  '"[unsplit "'\n  '" [s_linkto_dirs_[thread-id]]]"';\n";
  }
  loop v_[thread-id] = [inheritable_parameters] {
    s_[thread-id] = ;
    loop l_[thread-id] = [s_linkto_dirs_[thread-id]] {
      s_[thread-id] += [get-platform-value [v_[thread-id]] %9 [l_[thread-id]]/];
    }
    if [count [s_[thread-id]]] then {
      q_[thread-id] += "inherited_"[v_[thread-id]]_%0%/%9" =\n  '"[unsplit "'\n  '" [s_[thread-id]]]"';\n";
    } else {
      q_[thread-id] += "inherited_"[v_[thread-id]]_%0%/%9" = ;\n";
    }
  }
  [cat] > [target][how_suffix];
data
#!/bin/sh

# Script generated by rule defined in:
# [__FILE__]\:[__LINE__]

cd [pwd];
cat > [target] <<EOF 
[q_[thread-id]]
EOF
dataend
  [run-build-script [target]];
}

; /* make sure all recipes are instantiated now */
