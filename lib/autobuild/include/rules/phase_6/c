/*  cook files look like -*- C++ -*-
 *
 *  Autodiscovering Build System
 *  Copyright (C) 1997 - 2002 CG Software Design LLC
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *  Please send bug reports to bugs@cg-soft.com
 */

/*==============================================================*
 *								*
 *	Compile C Programs					*
 *								*
 *==============================================================*/

/*--- original C -----------------------------------------------*/
[skip_prefix]%0[do]/[unix]/%9/%[obj_suffix]:: [skip_prefix]%0%[c_suffix]:
    /* Uncomment next line if a change here should trigger rebuilds */
    [build]/include/rules/phase_6/c
    [build]/include/defs/c
    [cookbook]
    [get use_unpack %9 [skip_prefix]%0]
    [get use_dependency %9 [skip_prefix]%0]
    [build]/include/functions/get-local-value
    [build]/include/functions/combine
    [get-local-value customized_in [skip_prefix]%0]
  set silent
{
    /* Catch direct reference to external objects. We can only build them
     * properly if we have the complete info, i.e. the object is listed
     */
    if [in [target] [object_files_%9]] then {
#include [build]/include/rules/store-prerequisites
      [cat] > [target][how_suffix];
data
#!/bin/sh

# Script generated by rule defined in:
# [__FILE__]\:[__LINE__]

[trace use_unpack %9 [skip_prefix]%0]
[trace use_dependency %9 [skip_prefix]%0]
[trace pre_cc %9 [skip_prefix]%0]
[trace cc %9 [skip_prefix]%0]
[trace cc_flags %9 [skip_prefix]%0]
[trace cc_D_flags %9 [skip_prefix]%0]
[trace cc_I_flags %9 [skip_prefix]%0]

cd [pwd];

[echo] "'    Compile C:  '" [skip_prefix]%0%[c_suffix] "'-> ("[thread-id]")'";

[get pre_cc %9 [skip_prefix]%0] [get cc %9 [skip_prefix]%0]\\
  [get cc_flags %9 [skip_prefix]%0]\\
  [get cc_D_flags %9 [skip_prefix]%0]\\
  [get cc_I_flags %9 [skip_prefix]%0]\\
  -I[skip_prefix]%0\\
  -o [target] \\
  -c\\
  [skip_prefix]%0%[c_suffix] || ([rm] [target] && exit 1);
dataend
      [run-build-script [target]];
    } else {
      [echo] "'WARNING:'" [target] "'may be out of date'";
    }
}

/*--- generated C ----------------------------------------------*/
[skip_prefix]%0[do]/[unix]/%9/%[obj_suffix]:: [skip_prefix]%0[do]/[unix]/%9/%[c_suffix]:
    /* Uncomment next line if a change here should trigger rebuilds */
    [build]/include/rules/phase_6/c
    [build]/include/defs/c
    [cookbook]
    [get use_dependency %9 [skip_prefix]%0]
    [get use_unpack %9 [skip_prefix]%0]
    [build]/include/functions/get-local-value
    [build]/include/functions/combine
    [get-local-value customized_in [skip_prefix]%0]
  set silent
  if [not ['if'   [in [skip_prefix]%0%[cpp_suffix] [files_in_[skip_prefix]%0%9]]
	   'then' 1
	   'else' [in [skip_prefix]%0%[c_suffix]   [files_in_[skip_prefix]%0%9]]]]
{
    /* Catch direct reference to external objects. We can only build them
     * properly if we have the complete info, i.e. the object is listed
     */
    if [in [target] [object_files_%9]] then {
#include [build]/include/rules/store-prerequisites
      [cat] > [target][how_suffix];
data
#!/bin/sh

# Script generated by rule defined in:
# [__FILE__]\:[__LINE__]

[trace use_unpack %9 [skip_prefix]%0]
[trace use_dependency %9 [skip_prefix]%0]
[trace pre_cc %9 [skip_prefix]%0]
[trace cc %9 [skip_prefix]%0]
[trace cc_flags %9 [skip_prefix]%0]
[trace cc_D_flags %9 [skip_prefix]%0]
[trace cc_I_flags %9 [skip_prefix]%0]

cd [pwd]

[echo] "'    Compile C:  '" [skip_prefix]%0[do]/[unix]/%9/%[c_suffix] "'-> ("[thread-id]")'";

[get pre_cc %9 [skip_prefix]%0] [get cc %9 [skip_prefix]%0]\\
  [get cc_flags %9 [skip_prefix]%0]\\
  [get cc_D_flags %9 [skip_prefix]%0]\\
  [get cc_I_flags %9 [skip_prefix]%0]\\
  -I[skip_prefix]%0\\
  -o [target] \\
  -c\\
  [skip_prefix]%0[do]/[unix]/%9/%[c_suffix] || ([rm] [target] && exit 1);
dataend
      [run-build-script [target]];
    } else {
      [echo] "'WARNING:'" [target] "'may be out of date'";
    }
}

; /* make sure all recipes are instantiated now */
