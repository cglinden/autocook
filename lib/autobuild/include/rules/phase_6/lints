/*  cook files look like -*- C++ -*-
 *
 *  Autodiscovering Build System
 *  Copyright (C) 1997 - 2002 CG Software Design LLC
 *
 *  This program is free software; you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation; either version 2 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program; if not, write to the Free Software
 *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 *  Please send bug reports to bugs@cg-soft.com
 */

/*==============================================================*
 *								*
 *	Lint Crossreference					*
 *								*
 *==============================================================*/

/*--- create lint crossreference -------------------------------*/
%0[do]/[unix]/%9/simplex/%[lints_suffix]::
    [multiply-out lint_files_for [linkto_dirs_%0%9]]
    %0[do]/[unix]/%9/%[lint_suffix]:
    /* Uncomment next line if a change here should trigger rebuilds */
    [build]/include/rules/phase_6/lints
    [build]/include/defs/lint
    [cookbook]
    [get use_unpack %9 %0%/]
    [get use_dependency %9 %0]
    [build]/include/functions/get-local-value
    [build]/include/functions/combine
    [build]/include/functions/multiply-out
    %0[do]/[unix]/%9/%[bin_suffix][tsort_suffix]
    [get-local-value customized_in %0%/]
  set silent mkdir ingredients-fingerprint
  if [in [target_in_%0%9] simplex]
{
#include [build]/include/rules/store-prerequisites
  [cat] > [target][how_suffix];
data
#!/bin/sh

# Script generated by rule defined in:
# [__FILE__]\:[__LINE__]

[trace lint %9 %0]
[trace lints_flags %9 %0]
[trace cpp_I_flags %9 [skip_prefix]%0]
[trace cpp_default_I_flags %9 [skip_prefix]%0]
[trace cpp_D_flags %9 [skip_prefix]%0]
[trace lint_options_file %9 [skip_prefix]%0]

cd [pwd];

[echo] "'    Lint Xref:  '" %0[do]/[unix]/%9/%[lint_suffix] "'-> ("[thread-id]")'";

[get lint %9 %0]\\
    [get lints_flags %9 %0]\\
    -i%0\\
    [subst -I -i [get cpp_I_flags %9 %0] [get cpp_default_I_flags %9 %0]]\\
    +libdir"'('"[unsplit , [subst -I '' [get cpp_default_I_flags %9 %0]]]"')'"\\
    [subst -D -d [get cpp_D_flags %9 %0]]\\
    +os"'('"[do]/[unix]/%9/lint-output"')'"\\
    [get lint_options_file %9 %0]\\
    %0[do]/[unix]/%9/%[lint_suffix]\\
    [multiply-out lint_files_for [linkto_dirs_%0%9]] && [date] > [target]\\
       || ( [extract] [do]/[unix]/%9/lint-output >&2\; exit 1 );
dataend
  [run-build-script [target]];
}

/*--- create lint crossreference -------------------------------*/
%0%/[do]/[unix]/%9/complex/%[lints_suffix]::
    [multiply-out lint_files_for [linkto_dirs_%0%/%9]]:
    /* Uncomment next line if a change here should trigger rebuilds */
    [build]/include/rules/phase_6/lints
    [build]/include/defs/lint
    [cookbook]
    [get use_unpack %9 %0%/]
    [get use_dependency %9 %0]
    [build]/include/functions/get-local-value
    [build]/include/functions/multiply-out
    [build]/include/functions/combine
    %0%/[do]/[unix]/%9/%[bin_suffix][tsort_suffix]
    [get-local-value customized_in %0%/]
  set silent mkdir ingredients-fingerprint
  if [in [target_in_%0%/%9] complex]
{
#include [build]/include/rules/store-prerequisites
  [cat] > [target][how_suffix];
data
#!/bin/sh

# Script generated by rule defined in:
# [__FILE__]\:[__LINE__]

[trace lint %9 %0]
[trace lints_flags %9 %0]
[trace cpp_I_flags %9 [skip_prefix]%0]
[trace cpp_default_I_flags %9 [skip_prefix]%0]
[trace cpp_D_flags %9 [skip_prefix]%0]
[trace lint_options_file %9 [skip_prefix]%0]

cd [pwd];

[echo] "'    Lint Xref:  '" %0%/[do]/[unix]/%9/"'*'"[lint_suffix] "'-> ("[thread-id]")'";

[get lint %9 %0%/]\\
    [get lints_flags %9 %0]\\
    -i%0%/\\
    [subst -I -i [get cpp_I_flags%9  %0%/] [get cpp_default_I_flags %9 %0%/]]\\
    +libdir"'('"[unsplit , [subst -I '' [get cpp_default_I_flags %9 %0]]]"')'"\\
    [subst -D -d [get cpp_D_flags %9 %0%/]]\\
    +os"'('"[do]/[unix]/%9/lint-output"')'"\\
    [get lint_options_file %9 %0%/]\\
    [multiply-out lint_files_for [linkto_dirs_%0%/%9]] && [date] > [target]\\
      || ( [extract] [do]/[unix]/%9/lint-output >&2\; exit 1 );
dataend
  chmod +x  [target][how_suffix];
  [sh] [target][how_suffix] || ( [echo] "'### Error detected:'"\; [cat] [target][how_suffix]\; exit 1 );
}

/*--- create lint crossreference -------------------------------*/
%0%/[do]/[unix]/%9/smart_so/%[lints_suffix]::
    [multiply-out lint_files_for [linkto_dirs_%0%/%9]]
    [lint_files_for_%0%/%9]:
    /* Uncomment next line if a change here should trigger rebuilds */
    [build]/include/rules/phase_6/lints
    [build]/include/defs/lint
    [cookbook]
    [get use_unpack %9 %0%/]
    [get use_dependency %9 %0]
    [build]/include/functions/get-local-value
    [build]/include/functions/combine
    [build]/include/functions/multiply-out
    %0%/[do]/[unix]/%9/[lib_prefix]%[so_suffix][tsort_suffix]
    [get-local-value customized_in %0%/]
  set silent mkdir ingredients-fingerprint
  if [in [target_in_%0%/%9] smart_so]
{
#include [build]/include/rules/store-prerequisites
  [cat] > [target][how_suffix];
data
#!/bin/sh

# Script generated by rule defined in:
# [__FILE__]\:[__LINE__]

[trace lint %9 %0]
[trace lints_flags %9 %0]
[trace cpp_I_flags %9 [skip_prefix]%0]
[trace cpp_default_I_flags %9 [skip_prefix]%0]
[trace cpp_D_flags %9 [skip_prefix]%0]
[trace lint_options_file %9 [skip_prefix]%0]

cd [pwd];

[echo] "'    Lint Xref:  '" %0%/[do]/[unix]/%9/"'*'"[lint_suffix] "'-> ("[thread-id]")'";

[get lint %0%/]\\
    [get lints_flags %9 %0%/]\\
    -i%0%/\\
    [subst -I -i [get cpp_I_flags %9 %0%/] [get cpp_default_I_flags %9 %0%/]]\\
    +libdir"'('"[unsplit , [subst -I '' [get cpp_default_I_flags %9 %0]]]"')'"\\
    [subst -D -d [get cpp_D_flags %9 %0%/]]\\
    +os"'('"[do]/[unix]/%9/lint-output"')'"\\
    [get lint_options_file %9 %0%/]\\
    [get lint_flags %9 %0%/]\\
    [multiply-out lint_files_for [linkto_dirs_%0%/%9]]\\
    [lint_files_for_%0%/%9]  && [date] > [target]\\
      || ( [extract] [do]/[unix]/%9/lint-output >&2\; exit 1 );
dataend
  [run-build-script [target]];
}

; /* make sure all recipes are instantiated now */
